 labels = names( out425 );
 legend( 0, y.max * 0.8  , labels[c(2,3,4)], col=cols, lty=1);
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
labels = names( out425 );
labels
labels = c("Half/Full, P(full), R(1/2)");
 legend( 0, y.max * 0.8  , labels, col=cols, lty=1);
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2)");
 legend( 0, y.max * 0.8  , labels, col=cols, lty=1);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2), viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8  , labels, col=c(cols,"black"), lty=ltypes);
 labels = c("Half/Full", "P(full)", "R(1/2), viability");
 ltypes = c(1,1,1,2);
c(cols,"black"
)
 legend( 0, y.max * 0.8  , labels, col=c(cols,"black"), lty=ltypes);
 legend( 0, y.max * 0.8  , labels, col=c(cols,"black"), lty=c(1,1,1,2));
 legend( 0, y.max * 0.8  , labels, col=c(cols,"black"), lty=c(1,1,1,1));
?legend
example(legend)
example(legend)
example(legend)
example(legend)
str(ltypes);
ltypes
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2), viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8  , labels, col=c(cols,"black"), lty=
1:4)
?legend
     leg.txt <- c("Setosa     Petals", "Setosa     Sepals",
                  "Versicolor Petals", "Versicolor Sepals")
     y.leg <- c(4.5, 3, 2.1, 1.4, .7)
     cexv  <- c(1.2, 1, 4/5, 2/3, 1/2)
     matplot(c(1,8), c(0,4.5), type = "n", xlab = "Length", ylab = "Width",
             main = "Petal and Sepal Dimensions in Iris Blossoms")
     for (i in seq(cexv)) {
       text  (1, y.leg[i]-.1, paste("cex=",formatC(cexv[i])), cex=.8, adj = 0)
       legend(3, y.leg[i], leg.txt, pch = "sSvV", col = c(1, 3), cex = cexv[i])
     }
  x <- seq(-pi, pi, len = 65)
     plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)
     points(x, cos(x), pch = 3, col = 4)
     lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)
     title("legend(..., lty = c(2, -1, 1), pch = c(-1,3,4), merge = TRUE)",
           cex.main = 1.1)
     legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3,4,6), text.col= "green4",
            lty = c(2, -1, 1), pch = c(-1, 3, 4), merge = TRUE, bg='gray90')
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2), viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes);
ltypes
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(1,2));
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(1,1,1,2));
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(1,0,1,0,1,0,2,0));
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(1,1,2));
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(2,2,2));
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2), viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = c(2,2,2));
labels
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2)", "viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes)
rm(list=ls());
postscript(length=8, width=8);
filelist = "_normalized.data.file";
tb = read.table(filelist, sep="\t");
for( kk in 1:length(tb[,1]) ) {  ###the file loop ###
 # kk=1;
 file = paste( "normalized.data/", as.character(tb[kk,1]), sep="" );
 #file = "INPUTFILE";
 #file = "normalized.data/norm.M28.022006.txt";
tb.m = read.table( file, header=T, sep="\t");
# todo: remove NA and zeros from tb.m
# output to out3,
# columns in out3:
 header = c("t","half.over.black","Pb","R0.5","s" );
 out425 = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out425 ) = header;
 out425[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out425$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out425[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out425$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out425$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
###generate plots
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2)", "viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes);
 #dev.off();
} ###file loop####
dev.off();
# q("no");
rm(list=ls());
postscript("042506.loh.plot.12strains.ps",length=8, width=8);
filelist = "_normalized.data.file";
tb = read.table(filelist, sep="\t");
for( kk in 1:length(tb[,1]) ) {  ###the file loop ###
 # kk=1;
 file = paste( "normalized.data/", as.character(tb[kk,1]), sep="" );
 #file = "INPUTFILE";
 #file = "normalized.data/norm.M28.022006.txt";
tb.m = read.table( file, header=T, sep="\t");
# todo: remove NA and zeros from tb.m
# output to out3,
# columns in out3:
 header = c("t","half.over.black","Pb","R0.5","s" );
 out425 = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out425 ) = header;
 out425[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out425$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out425[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out425$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out425$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
###generate plots
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2)", "viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes);
 #dev.off();
} ###file loop####
dev.off();
# q("no");
rm(list=ls());
postscript("042506.loh.plot.12strains.ps",width=8, height=8);
filelist = "_normalized.data.file";
tb = read.table(filelist, sep="\t");
for( kk in 1:length(tb[,1]) ) {  ###the file loop ###
 # kk=1;
 file = paste( "normalized.data/", as.character(tb[kk,1]), sep="" );
 #file = "INPUTFILE";
 #file = "normalized.data/norm.M28.022006.txt";
tb.m = read.table( file, header=T, sep="\t");
# todo: remove NA and zeros from tb.m
# output to out3,
# columns in out3:
 header = c("t","half.over.black","Pb","R0.5","s" );
 out425 = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out425 ) = header;
 out425[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out425$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out425[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out425$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out425$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
###generate plots
 tokens = unlist( strsplit(file, "/") );
 shortfile = tokens[2];
 #postscript( paste( "_", shortfile, "loh.042506.ps", sep=".") );
 par(mar=c(4,4,4,4));
 #plot the ratio
 y.max = max( out425[,2], na.rm=T ) * 1.2;
 y.min = min( out425[,2], na.rm=T ) ;
 cols = c("blue","black","green");
 if ( y.max == Inf ) { y.max = 7 };
 plot(out425[,2] ~ out425$t,type='l', col=cols[1],
   main= paste( shortfile, " ", "Half vs Full Blacks" ),
   ylim=c(y.min, y.max), xlab="t (hours)",ylab="Half/Full Ratio");
  #overlay viability plot. 
  par(new=T);
  plot( out425$s ~ out425$t,type='l',xlab="",ylab="",axes=F,lty=2); 
 #plot the percentage and risks
 y.max = max( out425[,3:4], na.rm=T ) * 1.2;
 y.min = min( out425[,3:4], na.rm=T ) ;
 par(new=T);
 plot(out425$Pb ~ out425$t, type='l',  col=cols[2],
   ylim=c(y.min, y.max), xlab="",ylab="",axes=F);
 lines( out425[,4] ~ out425$t, col=cols[3] );
 axis(4, at=pretty(c(y.min, y.max)) );
 mtext("Percentage", side=4, line=3);
 #legend
 labels = c("Half/Full", "P(full)", "R(1/2)", "viability");
 ltypes = c(1,1,1,2);
 legend( 0, y.max * 0.8, labels, col=c(cols,"black"), lty = ltypes);
 #dev.off();
} ###file loop####
dev.off();
# q("no");
1.05^6
1.05^5
32/1.27
20.5 / 1.27
ls();
tb.m
rm(list=ls());
tb = read.table( "103006.lohcls.summary.csv", header=T, sep="\t");
tb
str(tb)
tb2 = t(tb);
tb2
table(tb$strain)
strains = uniq( tb$strain)
strains = unique( tb$strain)
strains
max( table(tb$strain) )
out = data.frame( matrix(nrow=max(table(tb$strain))), ncol=length(strains) )
out
out = data.frame( matrix(  nrow=max(table(tb$strain)), ncol=length(strains) ) );
out
out = data.frame( matrix(  nrow=max(table(tb$strain)), ncol=length(strains) ) );
names(out) = strains;
out
str(tb)
tb = read.table( "103006.lohcls.summary.csv", header=T, sep="\t");
#tb2 = t(tb);
strains = unique( tb$strain)
out.Tc = data.frame( matrix(  nrow=max(table(tb$strain)), ncol=length(strains) ) );
names(out) = strains;
out.Tg = out.Tc;
for( ss in 1:length(strains) ) {
  my.Tc = tb$Tc[tb$strain == strains[ss]];
  my.Tg = tb$Tg[tb$strain == strains[ss]];
  out.Tc[ 1:length(my.Tc),ss] = my.Tc;
  out.Tg[ 1:length(my.Tg),ss] = my.Tg;
}
out.Tc
out.Tg
strains = unique( tb$strain)
out.Tc = data.frame( matrix(  nrow=max(table(tb$strain)), ncol=length(strains) ) );
names(out.Tc) = strains;
out.Tg = out.Tc;
for( ss in 1:length(strains) ) {
  my.Tc = tb$Tc[tb$strain == strains[ss]];
  my.Tg = tb$Tg[tb$strain == strains[ss]];
  out.Tc[ 1:length(my.Tc),ss] = my.Tc;
  out.Tg[ 1:length(my.Tg),ss] = my.Tg;
}
out.Tc
strains
strains = sort( unique( tb$strain) )
out.Tc = data.frame( matrix(  nrow=max(table(tb$strain)), ncol=length(strains) ) );
names(out.Tc) = strains;
out.Tg = out.Tc;
for( ss in 1:length(strains) ) {
  my.Tc = tb$Tc[tb$strain == strains[ss]];
  my.Tg = tb$Tg[tb$strain == strains[ss]];
  out.Tc[ 1:length(my.Tc),ss] = my.Tc;
  out.Tg[ 1:length(my.Tg),ss] = my.Tg;
}
out.Tc
out.Tg
?t.test
t.test( tb$Tc, tb$Tg, paired=T)
?t.test
?t.test
t.test( tb$Tc, tb$Tg, paired=T, alternative="great")
t.test( tb$Tc, tb$Tg, paired=T, alternative="less")
summary(lm(tb$Tc ~ tb$Tg))
out.Tc
out.Tg
rbind(mean(out.Tc), sd(out.Tc))
rbind(mean(out.Tc), sd(out.Tc, na.rm=T))
rbind(mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T))
rbind(mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T))
rbind(mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T))
out2 = t ( rbind(mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
out2
out2 = t ( rbind(mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
out2
out2 = t ( rbind(mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
names(out2) = c("Tc", "Tc.sd", "Tg", "Tg.sd");
out2
out2 = t ( rbind(mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
out2 = data.frame( out2 );
names(out2) = c("Tc", "Tc.sd", "Tg", "Tg.sd");
out2
out2 = t ( rbind( strains, mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
out2 = data.frame( out2 );
names(out2) = c("strain", "Tc", "Tc.sd", "Tg", "Tg.sd");
out2
out2 = t ( rbind( as.character(strains), mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ) )
out2 = data.frame( out2 );
names(out2) = c("strain", "Tc", "Tc.sd", "Tg", "Tg.sd");
out2
write.table( out2, "103106.Tc.Tg.summary.csv", row.name=F, sep="\t");
write.table( out2, "103106.Tc.Tg.summary.csv", row.name=F, sep="\t", quote=F);
write.table( out2, "103106.Tc.Tg.summary.csv", row.name=F, sep="\t", quote=F);
?write.table
write.table( out2, "103106.Tc.Tg.summary.csv", row.name=F, quote=F, sep="\t");
?write.table
write.table( out2, "103106.Tc.Tg.summary.csv",  quote=F, sep="\t", row.names=F,);
system("pwd")
write.table( out.Tc, "_103106.Tc.values.csv", quote=F, sep="\t", row.names=F);
out2
table(tb)
table(tb$strain)
strains
x = table(tb$strain)
x
typeof(x)
str(x)
x = table(tb$strain)
out2 = t ( rbind( as.character(strains), mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ), x )
out2 = data.frame( out2 );
names(out2) = c("strain", "Tc", "Tc.sd", "Tg", "Tg.sd", "Nloh");
out2
x
x = as.vector(x)
x
x = as.vector( table(tb$strain) )
out2 = t ( rbind( as.character(strains), mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) ), x )
out2 = t ( rbind( as.character(strains), mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) , x ) )
out2
x = as.vector( table(tb$strain) )
out2 = t ( rbind( as.character(strains), mean(out.Tc, na.rm=T), sd(out.Tc, na.rm=T), mean(out.Tg, na.rm=T), sd(out.Tg, na.rm=T) , x ) )
out2 = data.frame( out2 );
names(out2) = c("strain", "Tc", "Tc.sd", "Tg", "Tg.sd", "Nloh");
out2
write.table( out2, "103106.Tc.Tg.summary.csv",  quote=F, sep="\t", row.names=F);
write.table( out.Tc, "_103106.Tc.values.csv", quote=F, sep="\t", row.names=F);
