setwd("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128")
tb = read.table( "M13.lohcls.013106.tab", header=T, sep="\t");
tb2 = tb;
labels = names( tb );
# normalize the data
 for( j in 5: 12 ) {
    tb2[,j] = tb[,j] * tb[,2] * tb[,3]
 }
# reorganize the data by days
 n = length(tb$t) / 3
 col.end=9;
 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 tb.sd = tb.m   # standard deviations
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9] );
 }
###I should do some quality check, using tb.sd / tb.m
 tb.sd[,2]/tb.m[,2]
### viability and mortality
 out1 = data.frame( matrix( nrow=n) )   # mean values
 names( out1 ) = c("t");
 out1$t = tb.m$t
 lo.s = lowess( tb.m$t[1:10], tb.m$total[1:10], f=2/3 );  
 plot( tb.m$total ~ tb.m$t);
 lines( lo.s, col=2);
 total.tmp = c( lo.s$y, tb.m$white[9:12])
 tb.m$total.old = tb.m$total;
 tb.m$total = total.tmp;
 out1$s = tb.m[,10] / tb.m[1,10] 
 for( i in 2:length(out1$t)  ) {
   delta.time = - tb.m[(i-1),1] + tb.m[i,1];
   #delta.s    = tb.m[ (i-1),2 ] - tb.m[ i, 2 ];
   #out1$m[i] = 2 * ( delta.s / ( tb.m[ (i-1),2 ] + tb.m[ i, 2 ])  )* (1 / delta.time) #???
   #out1$m2[i] =  ( tb.m[ (i-1),2 ] - tb.m[ i, 2 ] ) / tb.m[ (i-1),2 ]  #???
   delta.s = out1$s[i-1] - out1$s[i];
   avg.s   = ( out1$s[i-1] + out1$s[i] ) /2
   out1$m[i] = delta.s / ( avg.s * delta.time);
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
 }
 #out1[12,1:4] = NA; # remove the last data points  ###########################
 plot( out1$s ~ out1$t, type="l", main="viability");
 plot( out1$m ~ out1$t.m, col="blue", main="mortality over time");
### p(b) blacks and increasing rate for blacks
 row.end = 10;
 col.end = 9; 
 for( i in 1:row.end ) {
   # total.tmp = sum( tb.m[i, 2:col.end] );
   out1$p.b[i] = tb.m$black[i] / tb.m$total[i] ;
 } 
 plot( out1$p.b ~ out1$ t); 
 lo.b = lowess( out1$t[1:row.end], out1$p.b[1:row.end]);
 lines(lo.b, col="green");
 lines( out1$m ~ out1$t.m, col="red"); #mortality rate
 out1$p.b.lo = c( lo.b$y, NA);
 for( i in 2:row.end ) {
   delta.t = - tb.m[(i-1),1] + tb.m[i,1];
   delta.p.normalized = out1$p.b.lo[ i ] - out1$p.b.lo[i -1]/ (1 - out1$p.b.lo[i-1])
   out1$rate.b[i] = delta.p.normalized / delta.t 
 }
 #cols = rainbow(6);
 cols  =c("blue","red","black","green","purple");
 i=1;
 par(mar=c(5,4,4,4)+0.1);
 plot( out1$s ~ out1$t, col=cols[i], type='l', axes=F, xlab="t", ylab="",xlim=c(0,300) ); #viability
 title("M14 013106")
 i = i + 1;
 par(new=T);
 plot( out1$m ~ out1$t.m, col=cols[i],type='l', axes=F, xlab="", ylab="",xlim=c(0,300) ); #mortality rate
 axis(4, at=pretty(range(out1$m[2:row.end])) )
 mtext( "m", 4, 3);
 i = i + 1;
# par(new=T);
# plot( out1$rate.b ~ out1$t.m, col=cols[3], type='l', xlab="t", ylab="rate.b", xlim=c(0,300) ); #black rate
 par(new=T);
 plot( out1$p.b[1:row.end] ~ out1$t[1:row.end], col=cols[i],type='l',xlab="t",ylab="percentile",xlim=c(0,300), 
ylim=c(0,0.05)); #P(b)
 i = i + 1;
### p(1/2 blacks)
 out1$P0.5 = tb.m$B0.5 / (tb.m$total - 2*tb.m$black)
 par(new=T);
 plot( P0.5[1:row.end] ~ t[1:row.end],out1,axes=F,col=cols[i],type='l',xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.05));
 # title("percentage of 1/2 blacks");
 i = i + 1;
### p(1/4 blacks)
 out1$P0.25 = tb.m$B0.25 / ( tb.m$total - 2* tb.m$black)
 par(new=T);
 plot( P0.25[1:row.end] ~ t[1:row.end], out1, axes=F, col=cols[i],type='l',
xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.05));
 i = i + 1;
 #add labels here
 labels=c("viability","mortality rate","P(b)","P(1/2 b)","P(1/4 b)")
 legend( 0,0.2 ,labels, col=cols, lty=1);
tb.m
#no regrowth, reset 1st point
rm(list=ls());
setwd("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128")
tb = read.table( "M13.lohcls.013106.tab", header=T, sep="\t");
tb2 = tb;
labels = names( tb );
# normalize the data
 for( j in 5: 12 ) {
    tb2[,j] = tb[,j] * tb[,2] * tb[,3]
 }
# reorganize the data by days
 n = length(tb$t) / 3
 col.end=9;
 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 tb.sd = tb.m   # standard deviations
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9] );
 }
###I should do some quality check, using tb.sd / tb.m
 tb.sd[,2]/tb.m[,2]
### viability and mortality
 out1 = data.frame( matrix( nrow=n) )   # mean values
 names( out1 ) = c("t");
 out1$t = tb.m$t
 lo.s = lowess( tb.m$t[1:10], tb.m$total[1:10], f=2/3 );  
 plot( tb.m$total ~ tb.m$t);
 lines( lo.s, col=2);
 total.tmp = c( lo.s$y, tb.m$white[9:12])
 tb.m$total.old = tb.m$total;
 tb.m$total = total.tmp;
 out1$s = tb.m[,10] / tb.m[1,10] 
 for( i in 2:length(out1$t)  ) {
   delta.time = - tb.m[(i-1),1] + tb.m[i,1];
   #delta.s    = tb.m[ (i-1),2 ] - tb.m[ i, 2 ];
   #out1$m[i] = 2 * ( delta.s / ( tb.m[ (i-1),2 ] + tb.m[ i, 2 ])  )* (1 / delta.time) #???
   #out1$m2[i] =  ( tb.m[ (i-1),2 ] - tb.m[ i, 2 ] ) / tb.m[ (i-1),2 ]  #???
   delta.s = out1$s[i-1] - out1$s[i];
   avg.s   = ( out1$s[i-1] + out1$s[i] ) /2
   out1$m[i] = delta.s / ( avg.s * delta.time);
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
 }
 #out1[12,1:4] = NA; # remove the last data points  ###########################
 plot( out1$s ~ out1$t, type="l", main="viability");
 plot( out1$m ~ out1$t.m, col="blue", main="mortality over time");
### p(b) blacks and increasing rate for blacks
 row.end = 12;   #########change here
 col.end = 9; 
 for( i in 1:row.end ) {
   # total.tmp = sum( tb.m[i, 2:col.end] );
   out1$p.b[i] = tb.m$black[i] / tb.m$total[i] ;
 } 
 plot( out1$p.b ~ out1$ t); 
 lo.b = lowess( out1$t[1:row.end], out1$p.b[1:row.end]);
 lines(lo.b, col="green");
 lines( out1$m ~ out1$t.m, col="red"); #mortality rate
 out1$p.b.lo = c( lo.b$y, NA);
 for( i in 2:row.end ) {
   delta.t = - tb.m[(i-1),1] + tb.m[i,1];
   delta.p.normalized = out1$p.b.lo[ i ] - out1$p.b.lo[i -1]/ (1 - out1$p.b.lo[i-1])
   out1$rate.b[i] = delta.p.normalized / delta.t 
 }
 #cols = rainbow(6);
 cols  =c("blue","red","black","green","purple");
 i=1;
 par(mar=c(5,4,4,4)+0.1);
 plot( out1$s ~ out1$t, col=cols[i], type='l', axes=F, xlab="t", ylab="",xlim=c(0,300) ); #viability
 title("M14 013106")
 i = i + 1;
 par(new=T);
 plot( out1$m ~ out1$t.m, col=cols[i],type='l', axes=F, xlab="", ylab="",xlim=c(0,300) ); #mortality rate
 axis(4, at=pretty(range(out1$m[2:row.end])) )
 mtext( "m", 4, 3);
 i = i + 1;
# par(new=T);
# plot( out1$rate.b ~ out1$t.m, col=cols[3], type='l', xlab="t", ylab="rate.b", xlim=c(0,300) ); #black rate
 par(new=T);
 plot( out1$p.b[1:row.end] ~ out1$t[1:row.end], col=cols[i],type='l',xlab="t",ylab="percentile",xlim=c(0,300), 
ylim=c(0,0.05)); #P(b)
 i = i + 1;
### p(1/2 blacks)
 out1$P0.5 = tb.m$B0.5 / (tb.m$total - 2*tb.m$black)
 par(new=T);
 plot( P0.5[1:row.end] ~ t[1:row.end],out1,axes=F,col=cols[i],type='l',xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.05));
 # title("percentage of 1/2 blacks");
 i = i + 1;
### p(1/4 blacks)
 out1$P0.25 = tb.m$B0.25 / ( tb.m$total - 2* tb.m$black)
 par(new=T);
 plot( P0.25[1:row.end] ~ t[1:row.end], out1, axes=F, col=cols[i],type='l',
xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.05));
 i = i + 1;
 #add labels here
 labels=c("viability","mortality rate","P(b)","P(1/2 b)","P(1/4 b)")
 legend( 0,0.2 ,labels, col=cols, lty=1);
out1
#no regrowth, reset 1st point
rm(list=ls());
setwd("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128")
tb = read.table( "M13.lohcls.013106.tab", header=T, sep="\t");
tb2 = tb;
labels = names( tb );
# normalize the data
 for( j in 5: 12 ) {
    tb2[,j] = tb[,j] * tb[,2] * tb[,3]
 }
# reorganize the data by days
 n = length(tb$t) / 3
 col.end=9;
 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 tb.sd = tb.m   # standard deviations
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9] );
 }
###I should do some quality check, using tb.sd / tb.m
 tb.sd[,2]/tb.m[,2]
### viability and mortality
 out1 = data.frame( matrix( nrow=n) )   # mean values
 names( out1 ) = c("t");
 out1$t = tb.m$t
 lo.s = lowess( tb.m$t[1:10], tb.m$total[1:10], f=2/3 );  
 plot( tb.m$total ~ tb.m$t);
 lines( lo.s, col=2);
 total.tmp = c( lo.s$y, tb.m$white[9:12])
 tb.m$total.old = tb.m$total;
 tb.m$total = total.tmp;
 out1$s = tb.m[,10] / tb.m[1,10] 
 for( i in 2:length(out1$t)  ) {
   delta.time = - tb.m[(i-1),1] + tb.m[i,1];
   #delta.s    = tb.m[ (i-1),2 ] - tb.m[ i, 2 ];
   #out1$m[i] = 2 * ( delta.s / ( tb.m[ (i-1),2 ] + tb.m[ i, 2 ])  )* (1 / delta.time) #???
   #out1$m2[i] =  ( tb.m[ (i-1),2 ] - tb.m[ i, 2 ] ) / tb.m[ (i-1),2 ]  #???
   delta.s = out1$s[i-1] - out1$s[i];
   avg.s   = ( out1$s[i-1] + out1$s[i] ) /2
   out1$m[i] = delta.s / ( avg.s * delta.time);
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
 }
 #out1[12,1:4] = NA; # remove the last data points  ###########################
 plot( out1$s ~ out1$t, type="l", main="viability");
 plot( out1$m ~ out1$t.m, col="blue", main="mortality over time");
### p(b) blacks and increasing rate for blacks
 row.end = 12;   #########change here
 col.end = 9; 
 for( i in 1:row.end ) {
   # total.tmp = sum( tb.m[i, 2:col.end] );
   out1$p.b[i] = tb.m$black[i] / tb.m$total[i] ;
 } 
 plot( out1$p.b ~ out1$ t); 
 lo.b = lowess( out1$t[1:row.end], out1$p.b[1:row.end]);
 lines(lo.b, col="green");
 lines( out1$m ~ out1$t.m, col="red"); #mortality rate
 out1$p.b.lo = c( lo.b$y, NA);
 for( i in 2:row.end ) {
   delta.t = - tb.m[(i-1),1] + tb.m[i,1];
   delta.p.normalized = out1$p.b.lo[ i ] - out1$p.b.lo[i -1]/ (1 - out1$p.b.lo[i-1])
   out1$rate.b[i] = delta.p.normalized / delta.t 
 }
 #cols = rainbow(6);
 cols  =c("blue","red","black","green","purple");
 i=1;
 par(mar=c(5,4,4,4)+0.1);
 plot( out1$s ~ out1$t, col=cols[i], type='l', axes=F, xlab="t", ylab="",xlim=c(0,300) ); #viability
 title("M14 013106")
 i = i + 1;
 par(new=T);
 plot( out1$m ~ out1$t.m, col=cols[i],type='l', axes=F, xlab="", ylab="",xlim=c(0,300) ); #mortality rate
 axis(4, at=pretty(range(out1$m[2:row.end])) )
 mtext( "m", 4, 3);
 i = i + 1;
# par(new=T);
# plot( out1$rate.b ~ out1$t.m, col=cols[3], type='l', xlab="t", ylab="rate.b", xlim=c(0,300) ); #black rate
 par(new=T);
 plot( out1$p.b[1:row.end] ~ out1$t[1:row.end], col=cols[i],type='l',xlab="t",ylab="percentile",xlim=c(0,300), 
ylim=c(0,0.15)); #P(b)
 i = i + 1;
### p(1/2 blacks)
 out1$P0.5 = tb.m$B0.5 / (tb.m$total - 2*tb.m$black)
 par(new=T);
 plot( P0.5[1:row.end] ~ t[1:row.end],out1,axes=F,col=cols[i],type='l',xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 # title("percentage of 1/2 blacks");
 i = i + 1;
### p(1/4 blacks)
 out1$P0.25 = tb.m$B0.25 / ( tb.m$total - 2* tb.m$black)
 par(new=T);
 plot( P0.25[1:row.end] ~ t[1:row.end], out1, axes=F, col=cols[i],type='l',
xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 i = i + 1;
 #add labels here
 labels=c("viability","mortality rate","P(b)","P(1/2 b)","P(1/4 b)")
 legend( 0,0.2 ,labels, col=cols, lty=1);
#no regrowth, reset 1st point
rm(list=ls());
setwd("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128")
tb = read.table( "M13.lohcls.013106.tab", header=T, sep="\t");
tb2 = tb;
labels = names( tb );
# normalize the data
 for( j in 5: 12 ) {
    tb2[,j] = tb[,j] * tb[,2] * tb[,3]
 }
# reorganize the data by days
 n = length(tb$t) / 3
 col.end=9;
 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 tb.sd = tb.m   # standard deviations
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9] );
 }
###I should do some quality check, using tb.sd / tb.m
 tb.sd[,2]/tb.m[,2]
### viability and mortality
 out1 = data.frame( matrix( nrow=n) )   # mean values
 names( out1 ) = c("t");
 out1$t = tb.m$t
 lo.s = lowess( tb.m$t[1:10], tb.m$total[1:10], f=2/3 );  
 plot( tb.m$total ~ tb.m$t);
 lines( lo.s, col=2);
 total.tmp = c( lo.s$y, tb.m$white[9:12])
 tb.m$total.old = tb.m$total;
 tb.m$total = total.tmp;
 out1$s = tb.m[,10] / tb.m[1,10] 
 for( i in 2:length(out1$t)  ) {
   delta.time = - tb.m[(i-1),1] + tb.m[i,1];
   #delta.s    = tb.m[ (i-1),2 ] - tb.m[ i, 2 ];
   #out1$m[i] = 2 * ( delta.s / ( tb.m[ (i-1),2 ] + tb.m[ i, 2 ])  )* (1 / delta.time) #???
   #out1$m2[i] =  ( tb.m[ (i-1),2 ] - tb.m[ i, 2 ] ) / tb.m[ (i-1),2 ]  #???
   delta.s = out1$s[i-1] - out1$s[i];
   avg.s   = ( out1$s[i-1] + out1$s[i] ) /2
   out1$m[i] = delta.s / ( avg.s * delta.time);
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
 }
 #out1[12,1:4] = NA; # remove the last data points  ###########################
 plot( out1$s ~ out1$t, type="l", main="viability");
 plot( out1$m ~ out1$t.m, col="blue", main="mortality over time");
### p(b) blacks and increasing rate for blacks
 row.end = 12;   #########change here
 col.end = 9; 
 for( i in 1:row.end ) {
   # total.tmp = sum( tb.m[i, 2:col.end] );
   out1$p.b[i] = tb.m$black[i] / tb.m$total[i] ;
 } 
 plot( out1$p.b ~ out1$ t); 
 lo.b = lowess( out1$t[1:row.end], out1$p.b[1:row.end]);
 lines(lo.b, col="green");
 lines( out1$m ~ out1$t.m, col="red"); #mortality rate
 out1$p.b.lo = c( lo.b$y, NA);
 for( i in 2:row.end ) {
   delta.t = - tb.m[(i-1),1] + tb.m[i,1];
   delta.p.normalized = out1$p.b.lo[ i ] - out1$p.b.lo[i -1]/ (1 - out1$p.b.lo[i-1])
   out1$rate.b[i] = delta.p.normalized / delta.t 
 }
 #cols = rainbow(6);
 cols  =c("blue","red","black","green","purple");
 i=1;
 par(mar=c(5,4,4,4)+0.1);
 plot( out1$s ~ out1$t, col=cols[i], type='l', axes=F, xlab="t", ylab="",xlim=c(0,300) ); #viability
 title("M14 013106")
 i = i + 1;
 par(new=T);
 plot( out1$m ~ out1$t.m, col=cols[i],type='l', axes=F, xlab="", ylab="",xlim=c(0,300) ); #mortality rate
 axis(4, at=pretty(range(out1$m[2:row.end])) )
 mtext( "m", 4, 3);
 i = i + 1;
# par(new=T);
# plot( out1$rate.b ~ out1$t.m, col=cols[3], type='l', xlab="t", ylab="rate.b", xlim=c(0,300) ); #black rate
 par(new=T);
 plot( out1$p.b[1:row.end] ~ out1$t[1:row.end], col=cols[i],type='l',xlab="t",ylab="percentile",xlim=c(0,300), 
ylim=c(0,0.15)); #P(b)
 i = i + 1;
### p(1/2 blacks)
 out1$P0.5 = tb.m$B0.5 / (tb.m$total - 2*tb.m$black)
 par(new=T);
 plot( P0.5[1:row.end] ~ t[1:row.end],out1,axes=F,col=cols[i],type='l',xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 # title("percentage of 1/2 blacks");
 i = i + 1;
### p(1/4 blacks)
 out1$P0.25 = tb.m$B0.25 / ( tb.m$total - 2* tb.m$black)
 par(new=T);
 plot( P0.25[1:row.end] ~ t[1:row.end], out1, axes=F, col=cols[i],type='l',
xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 i = i + 1;
 #add labels here
 labels=c("viability","mortality rate","P(b)","P(1/2 b)","P(1/4 b)")
 legend( 0,0.1 ,labels, col=cols, lty=1);
tb.m
#no regrowth, reset 1st point
rm(list=ls());
setwd("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128")
tb = read.table( "M13.lohcls.013106.tab", header=T, sep="\t");
tb2 = tb;
labels = names( tb );
# normalize the data
 for( j in 5: 12 ) {
    tb2[,j] = tb[,j] * tb[,2] * tb[,3]
 }
# reorganize the data by days
 n = length(tb$t) / 3
 col.end=9;
 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 tb.sd = tb.m   # standard deviations
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9] );
 }
###I should do some quality check, using tb.sd / tb.m
 tb.sd[,2]/tb.m[,2]
### viability and mortality
 out1 = data.frame( matrix( nrow=n) )   # mean values
 names( out1 ) = c("t");
 out1$t = tb.m$t
 lo.s = lowess( tb.m$t[1:10], tb.m$total[1:10], f=2/3 );  
 plot( tb.m$total ~ tb.m$t);
 lines( lo.s, col=2);
 total.tmp = c( lo.s$y, tb.m$white[9:12])
 tb.m$total.old = tb.m$total;
 tb.m$total = total.tmp;
 out1$s = tb.m[,10] / tb.m[1,10] 
 for( i in 2:length(out1$t)  ) {
   delta.time = - tb.m[(i-1),1] + tb.m[i,1];
   #delta.s    = tb.m[ (i-1),2 ] - tb.m[ i, 2 ];
   #out1$m[i] = 2 * ( delta.s / ( tb.m[ (i-1),2 ] + tb.m[ i, 2 ])  )* (1 / delta.time) #???
   #out1$m2[i] =  ( tb.m[ (i-1),2 ] - tb.m[ i, 2 ] ) / tb.m[ (i-1),2 ]  #???
   delta.s = out1$s[i-1] - out1$s[i];
   avg.s   = ( out1$s[i-1] + out1$s[i] ) /2
   out1$m[i] = delta.s / ( avg.s * delta.time);
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
   out1$t.m[i] = ( tb.m[ (i-1),1 ] + tb.m[ i, 1 ] ) / 2
 }
 #out1[12,1:4] = NA; # remove the last data points  ###########################
 plot( out1$s ~ out1$t, type="l", main="viability");
 plot( out1$m ~ out1$t.m, col="blue", main="mortality over time");
### p(b) blacks and increasing rate for blacks
 row.end = 12;   #########change here
 col.end = 9; 
 for( i in 1:row.end ) {
   # total.tmp = sum( tb.m[i, 2:col.end] );
   out1$p.b[i] = tb.m$black[i] / tb.m$total[i] ;
 } 
 plot( out1$p.b ~ out1$ t); 
 lo.b = lowess( out1$t[1:row.end], out1$p.b[1:row.end]);
 lines(lo.b, col="green");
 lines( out1$m ~ out1$t.m, col="red"); #mortality rate
 out1$p.b.lo = c( lo.b$y, NA);
 for( i in 2:row.end ) {
   delta.t = - tb.m[(i-1),1] + tb.m[i,1];
   delta.p.normalized = out1$p.b.lo[ i ] - out1$p.b.lo[i -1]/ (1 - out1$p.b.lo[i-1])
   out1$rate.b[i] = delta.p.normalized / delta.t 
 }
 #cols = rainbow(6);
 cols  =c("blue","red","black","green","purple");
 i=1;
 par(mar=c(5,4,4,4)+0.1);
 plot( out1$s ~ out1$t, col=cols[i], type='l', axes=F, xlab="t", ylab="",xlim=c(0,300) ); #viability
 title("M13 013106")############################change here
 i = i + 1;
 par(new=T);
 plot( out1$m ~ out1$t.m, col=cols[i],type='l', axes=F, xlab="", ylab="",xlim=c(0,300) ); #mortality rate
 axis(4, at=pretty(range(out1$m[2:row.end])) )
 mtext( "m", 4, 3);
 i = i + 1;
# par(new=T);
# plot( out1$rate.b ~ out1$t.m, col=cols[3], type='l', xlab="t", ylab="rate.b", xlim=c(0,300) ); #black rate
 par(new=T);
 plot( out1$p.b[1:row.end] ~ out1$t[1:row.end], col=cols[i],type='l',xlab="t",ylab="percentile",xlim=c(0,300), 
ylim=c(0,0.15)); #P(b)
 i = i + 1;
### p(1/2 blacks)
 out1$P0.5 = tb.m$B0.5 / (tb.m$total - 2*tb.m$black)
 par(new=T);
 plot( P0.5[1:row.end] ~ t[1:row.end],out1,axes=F,col=cols[i],type='l',xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 # title("percentage of 1/2 blacks");
 i = i + 1;
### p(1/4 blacks)
 out1$P0.25 = tb.m$B0.25 / ( tb.m$total - 2* tb.m$black)
 par(new=T);
 plot( P0.25[1:row.end] ~ t[1:row.end], out1, axes=F, col=cols[i],type='l',
xlim=c(0,300),xlab="",ylab="",ylim=c(0,0.15));
 i = i + 1;
 #add labels here
 labels=c("viability","mortality rate","P(b)","P(1/2 b)","P(1/4 b)")
 legend( 0,0.1 ,labels, col=cols, lty=1);
save.image("C:/data/lab/MengLu/Hong_modifications/LOH-CLS-30C/R-013106-M13,M14,YPS128/m13.RData")
