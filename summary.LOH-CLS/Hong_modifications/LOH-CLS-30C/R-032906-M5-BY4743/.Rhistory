rm(list=ls());
#postscript("050806.loh.plot.by4743.ps",width=8, height=8);
file = "BY4743.032906.tab";
tb= read.table( file, header=T, sep="\t");
tb
row.num = c(1:30,rep(33,3), rep(36,3), rep(39,3),
   40:42, rep(45,3), 47,47,48, 50,50,51, 52:69 );
tb2 = tb[row.num, ];
tb2
labels = names( tb );
 n=length(tb2$t) / 3
 col.end = 10;
 tb.m = data.frame( matrix( nrow=n, ncol= col.end ) )  # mean values
 names( tb.m ) = c( labels[ c(1, 5:12) ], "total" );
tb.m
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   #tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     #tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9], na.rm=T );
 }
tb.m
tb.m
tb2
for( i in 1:length(tb2[,1]) ) {
 for( j in 1:length( 5:12 ) ) {
 tb2[i,j] = tb2[i,j] * tb2[i,2] * tb2[i,3];
}
}
tb2
for( i in 1:length(tb2[,1]) ) {
 for( j in 5:12 ) {
 tb2[i,j] = tb2[i,j] * tb2[i,2] * tb2[i,3];
 }
}
tb2
row.num = c(1:30,rep(33,3), rep(36,3), rep(39,3),
   40:42, rep(45,3), 47,47,48, 50,50,51, 52:69 );
tb2 = tb[row.num, ];
labels = names( tb );
for( i in 1:length(tb2[,1]) ) {
 for( j in 5:12 ) {
 tb2[i,j] = tb2[i,j] * tb2[i,2] * tb2[i,3];
 }
}
tb2
#generate tb.m
 n=length(tb2$t) / 3
 col.end = 10;
 tb.m = data.frame( matrix( nrow=n, ncol= col.end ) )  # mean values
 names( tb.m ) = c( labels[ c(1, 5:12) ], "total" );
 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   #tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     #tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9], na.rm=T );
 }
tb.m
 header = c("t","half.over.black","Pb","R0.5", "s" );
 out = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out ) = header;
 out[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out425$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out425[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out425$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out425$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
 header = c("t","half.over.black","Pb","R0.5", "s" );
 out = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out ) = header;
 out[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
 header = c("t","half.over.black","Pb","R0.5", "s" );
 out = data.frame( matrix( nrow= length(tb.m[,1]) , ncol= length(header) ) );
 names( out ) = header;
 out[,1] = tb.m[,1]; # "t"
 out[,1] = tb.m[,1]; # "t"
 #calculate the ratios and s
  for( i in length(out425[,1]):1 ) { #row
    out$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the ratios and s
  for( i in length(out[,1]):1 ) { #row
    out$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out425[,1]):1 ) { #row
    out$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
 #calculate the ratios and s
  for( i in length(out[,1]):1 ) { #row
    out$s[i] = tb.m$total[i]    / tb.m$total[1]; #s
    out[i,2] = tb.m$B0.5[i]     / tb.m$black[i];   
  }
 #calculate the risks (in contrast to percentages)
  for( i in length(out[,1]):1 ) { #row
    out$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out$R0.5[i]  = tb.m$B0.5[i]   / ( tb.m$total[i] - 2 * tb.m$black[i] );  # half blacks
  }
out
plot( out$s ~ out4t );
plot( out$s ~ out4t );
plot( out$s ~ out$t);
300/24
lines( out$Pb ~ out$t, col="red");
plot( out$Pb ~ out$t, col="red");
plot( out$R0.5 ~ out$t, col="red");
plot( out[,2] ~ out$t)
out
ls(0;
ls();
plot( out$s ~ out$t);
ls();
out
plot( out$Pb ~ out$t);
plot( out[,2] ~ out$t);
