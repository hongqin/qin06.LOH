#for initial analysis of LOH-CLS data, regular plot.

rm(list=ls());

file = "INPUTFILE";
#file = "M28.022006.txt";

tb = read.table( file, header=T, sep="\t");

tb2 = tb;
labels = names( tb );

# normalize the data, to tb2
 for( j in 5: 12 ) {tb2[,j] = tb2[,j] * tb2[,2] * tb2[,3]  }

# reorganize the data by days, to tb.m
 n = length(tb2$t) / 3
 col.end=9;

 tb.m = data.frame( matrix( nrow=n, ncol=9) )  # mean values
 names( tb.m ) = labels[ c(1, 5:12) ];
 #tb.sd = tb.m   # standard deviations

 for( i in 1:n ) {
   tb.m[i,1]  = tb2$t[3*i -2]
   #tb.sd[i,1] = tb.m[i, 1]
   for( j in 2: 9 ) {
     tb.m[i, j] = mean( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
     #tb.sd[i,j] = sd( tb2[ c(3*i-2, 3*i-1, 3*i), j+3] )
   }
   tb.m$total[i] = sum( tb.m[i, 2:9], na.rm=T );
 }

# todo: remove NA and zeros from tb.m


### calculate basal LOH and maximal LOH for black, 1/2, and 1/4 blacks. 
# output to out2,  
# columns in out2: "t  black.vs.half  half.vs.quarter Pb P0.5 P0.25 "
 out2 = data.frame( matrix( nrow= n , ncol= 7 ) );
 names( out2 ) = c( "t", "black.vs.half", "half.vs.quarter", "Pb", "P0.5", "P0.25", "P2" );

 out2[,1] = tb.m[,1]; # "t"

 #calculate the ratios
  for( i in length(out2[,1]):1 ) { #row
    out2[i,2] = tb.m[i,3] / tb.m[i,4];  # "black.vs.half"
    out2[i,3] = tb.m[i,4] / tb.m[i,5];  # "half.vs.quarter"
  }

 #calculate the percentages
  for( i in length(out2[,1]):1 ) { #row
    out2$Pb[i]    = tb.m$black[i]  / tb.m$total[i];  # full blacks
    out2$P0.5[i]  = tb.m$B0.5[i]   / tb.m$total[i];  # half blacks
    out2$P0.25[i] = tb.m$B0.25[i]  / tb.m$total[i];  # quarter blacks
    out2$P2[i]    = tb.m$B2[i]     / tb.m$total[i];  # quarter blacks
  }

#generate plots
 postscript( paste( "_", file, "loh.ps", sep=".") );
 
 #plot the ratios
 y.max = max( out2[, 2:3], na.rm=T ) * 1.2;
 y.min = min( out2[, 2:3], na.rm=T ) + 1e-4;
 cols = c("black","green");

 plot(out2[,2] ~ out2$t,type='l', col=cols[1], 
   main= paste( file, " ", "ratios" ),
   ylim=c(y.min, y.max), xlab="t",ylab="ratios");
 lines( out2[,3] ~ out2$t, col=cols[2]);
 labels = names( out2 );
 legend( 0, y.max , labels[2:3], col=cols, lty=1);

 #plot the percentages
 y.max = max( out2[, 4:7], na.rm=T ) * 1.2;
 y.min = min( out2[, 4:7], na.rm=T ) + 1e-4;
 cols = c("black","green","red","purple","blue");
 # par( yaxp=c(1e-4,20,1));
 plot(out2[,4] ~ out2$t,type='l', log='y', col=cols[1], 
   main= paste( file, " ", "percentages" ),
   ylim=c(y.min, y.max), xlab="t",ylab="percentage");
 count = 1;
 for ( i in 5:7 ) {
   count = count + 1;
   lines( out2[,i] ~ out2$t, col=cols[ count ] );
 }
 labels = names( out2 );
 legend( 0, y.max * 0.75, labels[4:7], col=cols, lty=1);
 dev.off();
# q("no");

