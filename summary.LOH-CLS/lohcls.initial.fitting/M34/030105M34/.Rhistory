##################################3
 #postscript("091706.030105M34.overlay.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(0, 1.1), pch=16 );
 title ("rad52DD 050706 #1");                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 ##calculate Rb = d(Pb)/dt
 # derivative.black <- function(b.max, b.min, T, w, t) {  (b.max - b.min) * w * t ^(w -1) / (1 + (t / T ))^2; }
 out$dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );  #first point is Inf
 out$g.e = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );
 out$Rb     = out$dPb / out$g.e;                        ### rate of becoming blacks
 out$R0.5   = out$R0.5.raw / out$g.e;                   #### 090706 change
 ## lines ( out$Rb ~ out$t, col="brown", lty=2) 
 #lines ( out$R0.5 ~ out$t, col="green", lty=2); 
 #points ( out$R0.5 ~ out$t, col="green");
 # out$e.b05  =  ifelse( out$e.b05==0, out$R0.5 * (out$e.b/out$Pb), out$e.b05    );
 # out$e.dPb =  out$dPb * (out$e.b / out$Pb)  ## I use out$e.b as proxy  
 out$L   = out$R0.5 / out$Rb   #This is equivalent to out$R0.5.raw / out$dPb
 out$L[3] = 0;
 out$e.L = out$L * sqrt( (out$e.b05 / out$R0.5)^2 + (out$e.b / out$Pb)^2 )
 ylim = c(0, max(out$L[2:length(out$L)])*1.7 )
 par(new=T);
 plot( out$L ~ out$t, col="red", axes=F, xlab="", ylab="", ylim=ylim, pch=16 ); 
 arrows( out$t, (out$L - out$e.L), out$t, (out$L + out$e.L), length=0.1, angle=90,code=3, lty=1, col="red" );
 axis(4, at=pretty(ylim) )
 mtext( "ratio", 4, 2);
 L = out$L[2:length(out$L)]; t=out$t[2:length(out$L)];
 L = c( 0, L);  t = c(0, t);
 fm.L = gnls( L ~ A * exp(B*t) + C, start=list( A=0.005, B=0.5, C=0.005) );
 t = seq(0, max(out$t),by=0.1);
 fit.L = fm.L$coefficients[1] * exp( fm.L$coefficients[2] * t) + fm.L$coefficients[3]
 lines( fit.L ~ t, col="red", lty=2);
 #add labels here
 cols  =c("blue","black","red");
 labels=c("viability","Pr(b)","half/full")
 ltypes=c(2,2,2) 
 pch   =c( 16, 15,16)
 legend( 5 , 10 ,labels, col=cols, lty=ltypes, pch=pch);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title ("M34 030106");                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 dev.off();
##################################3
 #postscript("091706.030105M34.overlay.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(0, 1.1), pch=16 );
 title ("rad52DD 050706 #1");                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 ##calculate Rb = d(Pb)/dt
 # derivative.black <- function(b.max, b.min, T, w, t) {  (b.max - b.min) * w * t ^(w -1) / (1 + (t / T ))^2; }
 out$dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );  #first point is Inf
 out$g.e = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );
 out$Rb     = out$dPb / out$g.e;                        ### rate of becoming blacks
 out$R0.5   = out$R0.5.raw / out$g.e;                   #### 090706 change
 ## lines ( out$Rb ~ out$t, col="brown", lty=2) 
 #lines ( out$R0.5 ~ out$t, col="green", lty=2); 
 #points ( out$R0.5 ~ out$t, col="green");
 # out$e.b05  =  ifelse( out$e.b05==0, out$R0.5 * (out$e.b/out$Pb), out$e.b05    );
 # out$e.dPb =  out$dPb * (out$e.b / out$Pb)  ## I use out$e.b as proxy  
 out$L   = out$R0.5 / out$Rb   #This is equivalent to out$R0.5.raw / out$dPb
 out$L[3] = 0;
 out$e.L = out$L * sqrt( (out$e.b05 / out$R0.5)^2 + (out$e.b / out$Pb)^2 )
 ylim = c(0, max(out$L[2:length(out$L)])*1.7 )
 par(new=T);
 plot( out$L ~ out$t, col="red", axes=F, xlab="", ylab="", ylim=ylim, pch=16 ); 
 arrows( out$t, (out$L - out$e.L), out$t, (out$L + out$e.L), length=0.1, angle=90,code=3, lty=1, col="red" );
 axis(4, at=pretty(ylim) )
 mtext( "ratio", 4, 2);
 L = out$L[2:length(out$L)]; t=out$t[2:length(out$L)];
 L = c( 0, L);  t = c(0, t);
 fm.L = gnls( L ~ A * exp(B*t) + C, start=list( A=0.005, B=0.5, C=0.005) );
 t = seq(0, max(out$t),by=0.1);
 fit.L = fm.L$coefficients[1] * exp( fm.L$coefficients[2] * t) + fm.L$coefficients[3]
 lines( fit.L ~ t, col="red", lty=2);
 #add labels here
 cols  =c("blue","black","red");
 labels=c("viability","Pr(b)","half/full")
 ltypes=c(2,2,2) 
 pch   =c( 16, 15,16)
 legend( 5 , 10 ,labels, col=cols, lty=ltypes, pch=pch);
 postscript("091706.030105M34.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title ("M34 030106");                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 dev.off();
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title ("M34 030106");                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 dev.off();
###################overlay s, m, Pb, an R0.5, half/full, mortality
 postscript("091706.030105M34.s.m.Pb.Rb.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="");
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="");
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
dev.off()
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9 , 1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="");
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black" );
 labels=c("viability","P(b)", "mortality rate")
 ltypes=c(2,2,) 
 pch   =c(16,15)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "brown" );
 labels=c("viability","P(b)", "mortality rate")
 ltypes=c(2,2,2) 
 pch   =c(16,15, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "brown" );
 labels=c("viability","P(b)", "mortality rate")
 ltypes=c(2,2,1) 
 pch   =c(16,15, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="brown", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple" );
 labels=c("viability","P(b)", "mortality rate")
 ltypes=c(2,2,1) 
 pch   =c(16,15, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 lines( fit.Rb ~ t, col="red")
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 lines( fit.Rb ~ t, col="red")
plot( fit.Rb ~ t )
lines( fit.g ~ t)
plot( fit.g ~ t)
plot( fit.Rb ~ t, col="red" )
plot( fit.g ~ t)
lines( fit.Rb ~ t, col="red" )
plot( fit.Rb ~ t, col="red" )
plot( fit.g ~ t)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "")
 ltypes=c(2,2,1) 
 pch   =c(16,15, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 lines( fit.Rb ~ t, col="red")
 lines( fit.g ~ t, col="green")
b.min
b.max
fit.g
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "")
 ltypes=c(2,2,1) 
 pch   =c(16,15, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 lines( fit.g ~ t, col="green")
 lines( fit.Rb ~ t, col="red")
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
fit.g
b.max
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "black rate")
 ltypes=c(2,2,1,1) 
 pch   =c(16,15, NA, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 lines( fit.g ~ t, col="green")
 lines( fit.Rb ~ t, col="red")
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 postscript("091706.030105M34.s.m.Pb.Rb.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "black rate")
 ltypes=c(2,2,1,1) 
 pch   =c(16,15, NA, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 #lines( fit.g ~ t, col="green")
 lines( fit.Rb ~ t, col="red")
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 dev.off();
 postscript("091706.030105M34.s.m.Pb.Rb.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "black rate")
 ltypes=c(2,2,1,1) 
 pch   =c(16,15, NA, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 #lines( fit.g ~ t, col="green")
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 lines( fit.Rb ~ t, col="red")
 dev.off();
 postscript("091706.030105M34.s.m.Pb.Rb.ps", width=8, height=8)
 par(mar=c(5,4,4,4)+0.1);
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(-0.05, 1.2), pch=16 );
 title (file);
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 fit.b = logistical.black( b.max, b.min, fm.b$coefficients[1], fm.b$coefficients[2], t);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 cols  =c("blue","black", "purple", "red" );
 labels=c("viability","P(b)", "mortality rate", "black rate")
 ltypes=c(2,2,1,1) 
 pch   =c(16,15, NA, NA)
 legend( 9.2 , 1.1 ,labels, col=cols, lty=ltypes, pch=pch);
 fit.dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );  #first point is Inf
 fit.g   = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], t );
 fit.Rb  = fit.dPb / fit.g;                        ### rate of becoming blacks
 #lines( fit.g ~ t, col="green")
 par(new=T)
 fit.m = logistical.mortality ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 plot( fit.m ~ t, col="purple", axe=F, xlab="",ylab="", type='l');
 axis(4, at=pretty(fit.m) )
 mtext( "rate", 4, 2);
 lines( fit.Rb ~ t, col="red")
 dev.off();
 plot( out$s ~ out$t, col="blue", xlab="t(days)",ylab="percentage", ylim=c(0, 1.1), pch=16 );
 title (file);                                        ############change here
 arrows( out$t, (out$s - out$e.s), out$t, (out$s + out$e.s), length=0.1, angle=90,code=3, lty=1, col="blue" );
 t = seq(0, max(out$t),by=0.1);
 fit.s = logistical.viability ( fm.s$coefficients[1], fm.s$coefficients[2], t );
 lines( fit.s ~ t, col="blue",lty=2);
 points( out$Pb ~ out$t, pch=15 );
 arrows( out$t, (out$Pb - out$e.b), out$t, (out$Pb + out$e.b), length=0.1, angle=90,code=3, lty=1 );
 lines( fit.b ~ t, lty=2);
 ##calculate Rb = d(Pb)/dt
 # derivative.black <- function(b.max, b.min, T, w, t) {  (b.max - b.min) * w * t ^(w -1) / (1 + (t / T ))^2; }
 out$dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );  #first point is Inf
 out$g.e = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );
plot(out$dPb ~ out$t)
out
plot( out$R0.5.raw ~ out$t)
plot( out$R0.5 ~ out$t)
 ##calculate Rb = d(Pb)/dt
 # derivative.black <- function(b.max, b.min, T, w, t) {  (b.max - b.min) * w * t ^(w -1) / (1 + (t / T ))^2; }
 out$dPb = derivative.black(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );  #first point is Inf
 out$g.e = genome.integrity(b.max, b.min,  fm.b$coefficients[1], fm.b$coefficients[2], out$t );
 out$Rb     = out$dPb / out$g.e;                        ### rate of becoming blacks
 out$R0.5   = out$R0.5.raw / out$g.e;                   #### 090706 change
 ## lines ( out$Rb ~ out$t, col="brown", lty=2) 
 #lines ( out$R0.5 ~ out$t, col="green", lty=2); 
 #points ( out$R0.5 ~ out$t, col="green");
 # out$e.b05  =  ifelse( out$e.b05==0, out$R0.5 * (out$e.b/out$Pb), out$e.b05    );
 # out$e.dPb =  out$dPb * (out$e.b / out$Pb)  ## I use out$e.b as proxy  
 out$L   = out$R0.5 / out$Rb   #This is equivalent to out$R0.5.raw / out$dPb
out
out$L
out$R0.5
out$Rb
plot(out$L ~ out$t_
;
plot(out$L ~ out$t)
plot(out$L ~ out$t, log='y')
